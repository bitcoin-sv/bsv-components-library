plugins {
    id 'org.springframework.boot' version '2.1.9.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'groovy'
    id 'java-library'
    id 'maven-publish'
}

/****************************************
 * Local Configuration
 ****************************************/
jclGroup = "$jclGroup"
jclVersion = "$jclVersion"
jclArtifactName = "$jclArtifactName"

group = "$rootProject.jclGroup"
version = "$rootProject.jclVersion"
sourceCompatibility = "11"
targetCompatibility = "11"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // Compile Dependencies:
    implementation "io.bitcoinsv.bitcoinjsv:bitcoinj-base:1.0.1"
    implementation(project(":tools"))
    implementation(project(":store"))
    implementation(project(":store-keyValue"))
    implementation 'org.foundationdb:fdb-java:6.2.22'
    implementation 'org.slf4j:slf4j-api:1.7.26'

    // Testing
    
    // NOTE:
    // WE are setting up a dependency on the TESTS from the JCL-Store. This might not be a good practice, but in this
    // case its OK, since the JCL-Module defines the interfaces and the Tests that those interfaces must meet. So the
    // Tests are oly defined ONCe in the JCL-Store module, and in this project we just extend them and add the 
    // concrete logic to create instances of those interfaces:

    testImplementation project(':store').sourceSets.test.output
    
    
    testImplementation 'org.codehaus.groovy:groovy'
    testImplementation "org.spockframework:spock-core:1.2-groovy-2.5"
    testImplementation "ch.qos.logback:logback-classic:1.2.3"
    testImplementation 'org.projectlombok:lombok'

    // TestContainer, to start automatically a FoundationDB running in a Docker container...
    // NOTE: Not used at the moment, since starting and stopping the container is NOT enough: We also need to
    // INITIALIZE the DataBase, meaning we need to run some Shell Scripts. So instead of using TestContainers, we
    // are just executing some Shell Scripts Before and After the Tests (check DockerTestUtils class).

    testImplementation 'org.testcontainers:spock:1.15.1'

}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if (JavaVersion.current().isJava11Compatible()) {
        options.addBooleanOption('Xdoclint:none', true)
    }
}

/****************************************
 * Publish the JAR
 ****************************************/
publishing {
    publications {
        mavenJava(MavenPublication) {

            artifactId = "$jclArtifactName"
            groupId = "$jclGroup"
            version = "$jclVersion"

            from components.java

            pom {
                name = "$jclArtifactName"
                description = 'Java implementation of Bitcoin components'
                url = 'https://github.com/bitcoin-sv/bsv-components-library'

                licenses {
                    license {
                        name = 'Open BSV License'
                        url = 'https://github.com/bitcoin-sv/bsv-components-library/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        organization = 'nChain'
                        organizationUrl = 'https://nchain.com'
                        name = 'i.fernandez'
                    }
                }
                scm {
                    url = 'https://github.com/bitcoin-sv/bsv-components-library'
                }
            }
        }
    }

    repositories {
        mavenLocal()
    }
}
